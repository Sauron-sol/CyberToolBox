import asyncio
import tempfile
import os
import logging
from pathlib import Path
from core.analyzer import MalwareAnalyzer
from core.reporter import SandboxReporter
from config.sandbox_config import SandboxConfig

async def test_malicious_sample():
    """Test with a simulated malicious file"""
    # Create a simulated malicious file
    malicious_content = b"""
    X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*
    """
    
    try:
        with tempfile.NamedTemporaryFile(delete=False) as temp_file:
            temp_file.write(malicious_content)
            temp_path = temp_file.name

        print("üîç Starting malicious file analysis...")
        
        analyzer = MalwareAnalyzer()
        reporter = SandboxReporter(SandboxConfig)
        
        results = await analyzer.analyze_sample(temp_path)
        
        sample_info = {
            'filename': 'malicious_test.exe',
            'size': len(malicious_content),
            'path': temp_path
        }
        
        report = await reporter.generate_report(results, sample_info)
        
        print("\nüö® Analysis Results:")
        print(f"Risk Score: {report['risk_score']}/100")
        print(f"Report locations:")
        print(f"- JSON: {report['json_path']}")
        print(f"- HTML: {report['html_path']}")
        
    finally:
        os.unlink(temp_path)

if __name__ == "__main__":
    asyncio.run(test_malicious_sample()) 